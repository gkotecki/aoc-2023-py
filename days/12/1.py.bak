import os
import pprint
import re

os.system("clear")
os.system("cls")


def pp(lines):
    pprint.PrettyPrinter(indent=4).pprint(lines)


lines = open("days/12/input.txt").read().splitlines()
lines = open("days/12/example.txt").read().splitlines()  # 21 arrangements
#       ???.###              1,1,3    - 1  arrangement
#       .??..??...?##.       1,1,3    - 4  arrangements
#       ?#?#?#?#?#?#?#?      1,3,1,6  - 1  arrangement
#       ????.#...#...        4,1,1    - 1  arrangement
#       ????.######..#####.  1,6,5    - 4  arrangements
#       ?###????????         3,2,1    - 10 arrangements

pp(lines)

count = 0

entries = [x.split() for x in lines]
for str_map, str_count in entries:
    c_count = list(map(int, str_count.split(",")))
    print(f"\n>> checking   {str_map}   for: {c_count}")
    print(f"   length: {len(str_map)},  sum: {sum(c_count)}")

    if (len(str_map) - sum(c_count)) <= 2:
        count += 1
        print("++count")
        continue

    str_map = [x for x in str_map.split(".") if x]
    print(f"   map: {str_map} {c_count}")

    while str_map and c_count:
        if len(str_map[-1]) == c_count[-1]:
            str_map.pop(-1)
            c_count.pop(-1)
            continue
        elif len(str_map[0]) == c_count[0]:
            str_map.pop(0)
            c_count.pop(0)
            continue

        elif "#" not in str_map[-1]:
            if len(str_map[-1]) == c_count[-1] + 1:
                print("++count 2")
                count += 2
                str_map.pop(-1)
                c_count.pop(-1)
                continue
            elif len(str_map[0]) == c_count[0] + 1:
                print("++count 2")
                count += 2
                str_map.pop(0)
                c_count.pop(0)
                continue

        elif len(str_map) == len(c_count):
            for i, str in enumerate(str_map):
                if "#"*c_count[i] in str:
                    print("++count")
                    count += 1
                    break
            continue

        break

    else:
        print("++count naturally")
        count += 1

    print(f"   map: {str_map} {c_count}")

print(f"\n>> count: {count}")
